// JS-Script (US): crypt_utils.js @ 2023-02-05 17:45:46 +0000
const smartJ$TestCrypto=new class{constructor(){"use strict";const _N$="smartJ$TestCrypto";const _C$=this;const _p$=console;let SECURED=false;_C$.secureClass=()=>{if(SECURED===true){_p$.warn(_N$,"Class is already SECURED")}else{SECURED=true;Object.freeze(_C$)}};const raiseError=err=>{_p$.error(_N$,"ERR: Browser FAILED with:",err)};_C$.raiseError=raiseError;const testBase64=()=>{return"VW5pY29kZSBTdHJpbmc6CQnFn8WexaPFosSDxILDrsOOw6LDgsiZyJjIm8iaICgwNS0wOSM="};_C$.testBase64=testBase64;const testCRC32B=(b36=false)=>{if(b36===true){return"01hcnnc"}else{return"055757b8"}};_C$.testCRC32B=testCRC32B;const testMD5=(b64=false)=>{if(b64===true){return"PW7773idgEOjkmVB/rmhjA=="}else{return"3d6efbef789d8043a3926541feb9a18c"}};_C$.testMD5=testMD5;const testSHA1=(b64=false)=>{if(b64===true){return"WgoSffvbg0kbn7wO453JRwZsQmw="}else{return"5a0a127dfbdb83491b9fbc0ee39dc947066c426c"}};_C$.testSHA1=testSHA1;const testSHA256=(b64=false)=>{if(b64===true){return"GTvIwHM9xKaYl7+tgXkV22cyONrQnWDMkSm7PMsiVKg="}else{return"193bc8c0733dc4a69897bfad817915db673238dad09d60cc9129bb3ccb2254a8"}};_C$.testSHA256=testSHA256;const testSHA512=(b64=false)=>{if(b64===true){return"tRt7Uw8rciM8Vf4P08PES7q+TbboJq/Fi0hmilLqef5fvSclO5iu287kAdu4qgCpcFbdCIpWtEugozIN8ttcHg=="}else{return"b51b7b530f2b72233c55fe0fd3c3c44bbabe4db6e826afc58b48668a52ea79fe5fbd27253b98aedbcee401dbb8aa00a97056dd088a56b44ba0a3320df2db5c1e"}};_C$.testSHA512=testSHA512;const unicodeString=()=>{return"Unicode String:\t\t\u015f\u015e\u0163\u0162\u0103\u0102\xee\xce\xe2\xc2\u0219\u0218\u021b\u021a (05-09#"};_C$.unicodeString=unicodeString}};smartJ$TestCrypto.secureClass();if(typeof window!="undefined"){window.smartJ$TestCrypto=smartJ$TestCrypto}const smartJ$Base64=new class{constructor(){"use strict";const _N$="smartJ$Base64";const _C$=this;const _p$=console;let SECURED=false;_C$.secureClass=()=>{if(SECURED===true){_p$.warn(_N$,"Class is already SECURED")}else{SECURED=true;Object.freeze(_C$)}};const _Utils$=smartJ$Utils;const _Test$=smartJ$TestCrypto;let testBase64PassedEnc=false;let testBase64PassedDec=false;const encode=function(s,bin=false){if(testBase64PassedEnc!==true){if(base64_core_enc(_Test$.unicodeString())==_Test$.testBase64()){testBase64PassedEnc=true}else{_Test$.raiseError("Base64/Encode");return""}}return String(base64_core_enc(s,bin))};_C$.encode=encode;const decode=function(s,bin=false){if(testBase64PassedDec!==true){if(base64_core_dec(_Test$.testBase64())==_Test$.unicodeString()){testBase64PassedDec=true}else{_Test$.raiseError("Base64/Decode");return""}}return String(base64_core_dec(s,bin))};_C$.decode=decode;const b64Chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";const base64_core_enc=function(input,is_binary){input=_Utils$.stringPureVal(input);if(input==""){return""}if(is_binary!==true){input=_Utils$.utf8_encode(input)}const keyStr=String(b64Chars);let output="";let chr1,chr2,chr3;let enc1,enc2,enc3,enc4;let i=0;do{chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4)}while(i<input.length);return String(output)};const base64_core_dec=function(input,is_binary){input=_Utils$.stringPureVal(input);if(input==""){return""}const keyStr=String(b64Chars);let output="";let chr1,chr2,chr3;let enc1,enc2,enc3,enc4;let i=0;input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}while(i<input.length);if(is_binary!==true){output=_Utils$.utf8_decode(output)}return String(output)}}};smartJ$Base64.secureClass();if(typeof window!="undefined"){window.smartJ$Base64=smartJ$Base64}const smartJ$BaseEncode=new class{constructor(){"use strict";const _N$="smartJ$BaseEncode";const _C$=this;const _p$=console;let SECURED=false;_C$.secureClass=()=>{if(SECURED===true){_p$.warn(_N$,"Class is already SECURED")}else{SECURED=true;Object.freeze(_C$)}};const _Utils$=smartJ$Utils;const _Ba$e64=smartJ$Base64;const b64s_enc=function(str,bin=false){return _Ba$e64.encode(str,bin).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,".")};_C$.b64s_enc=b64s_enc;const b64s_dec=function(enc,bin=false){return _Ba$e64.decode(_Utils$.stringPureVal(enc).replace(/\-/g,"+").replace(/_/g,"/").replace(/\./g,"="),bin)};_C$.b64s_dec=b64s_dec;const base_to_hex_convert=function(encoded,currentBase){const _m$="base_to_hex_convert";encoded=_Utils$.stringPureVal(encoded,true);if(encoded==""){_p$.warn(_N$,_m$,"Empty Input");return""}let baseCharset=base_get_alphabet(currentBase);if(baseCharset==""){_p$.warn(_N$,_m$,"Invalid Current Base:",currentBase);return""}currentBase=baseCharset.length;let data=encoded.split("");encoded=null;data=data.map(c=>{const result=String(baseCharset).indexOf(c);if(result<0){_p$.warn(_N$,_m$,"Invalid Base Character:",c)}return result});let leadingZeroes=0;while(data.length&&0===data[0]){leadingZeroes++;data.shift()}let converted=base_asciihex_convert(data,currentBase,256);data=null;if(0<leadingZeroes){let arrZeroFill=new Array(leadingZeroes).fill(0,0,leadingZeroes);converted=[].concat(arrZeroFill,converted)}converted=converted.map(c=>String.fromCharCode(c)).join("");return String(_Utils$.bin2hex(converted,true))};_C$.base_to_hex_convert=base_to_hex_convert;const base_from_hex_convert=function(hexstr,targetBase){const _m$="base_from_hex_convert";hexstr=_Utils$.stringPureVal(hexstr,true);if(hexstr==""){_p$.warn(_N$,_m$,"Empty Input");return""}let baseCharset=base_get_alphabet(targetBase);if(baseCharset==""){_p$.warn(_N$,_m$,"Invalid Target Base:",targetBase);return""}targetBase=baseCharset.length;let source=String(_Utils$.hex2bin(hexstr,true));if(source==""){_p$.warn(_N$,_m$,"Invalid Input, NOT HEX:",hexstr);return""}hexstr=null;source=source.split("");source=source.map(c=>String(c).charCodeAt(0));let leadingZeroes=0;while(source.length&&0===source[0]){leadingZeroes++;source.shift()}let result=base_asciihex_convert(source,256,targetBase);source=null;if(0<leadingZeroes){let arrZeroFill=new Array(leadingZeroes).fill(0,0,leadingZeroes);result=[].concat(arrZeroFill,result)}baseCharset=baseCharset.split("");return String(result.map(el=>baseCharset[el]).join(""))};_C$.base_from_hex_convert=base_from_hex_convert;const base_get_alphabet=function(theBase){const minAlphabet="0123456789abcdefghijklmnopqrstuv";const minComplAlphabet="wxyz";const extraAlphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ";const glyphAlphabet=".-:+=^!/*?&<>()[]{}@%$#";const glyphExtAlphabet='|;,_~`"';const altAlphabet="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";const targetBase=_Utils$.stringPureVal(theBase,true);let fromcharset="";switch(targetBase){case"32":fromcharset=String(minAlphabet).toUpperCase();break;case"36":fromcharset=String(minAlphabet)+String(minComplAlphabet);break;case"58":fromcharset=String(altAlphabet);break;case"62":fromcharset=String(minAlphabet)+String(minComplAlphabet)+String(extraAlphabet);break;case"85":fromcharset=String(minAlphabet)+String(minComplAlphabet)+String(extraAlphabet)+String(glyphAlphabet);break;case"92":fromcharset=String(minAlphabet)+String(minComplAlphabet)+String(extraAlphabet)+String(glyphAlphabet)+String(glyphExtAlphabet);break;default:_p$.error(_N$,"base_get_alphabet","Invalid Base:",targetBase)}return String(fromcharset)};const base_asciihex_convert=function(source,sourceBase,targetBase){let result=[];let count;while(count=source.length){let quotient=[];let remainder=0;for(let i=0;i!==count;i++){let accumulator=source[i]+remainder*sourceBase;let digit=(accumulator-accumulator%targetBase)/targetBase;remainder=accumulator%targetBase;if(quotient.length||digit){quotient.push(digit)}}result.unshift(remainder);source=quotient}return result}}};smartJ$BaseEncode.secureClass();if(typeof window!="undefined"){window.smartJ$BaseEncode=smartJ$BaseEncode}const smartJ$CryptoHash=new class{constructor(){"use strict";const _N$="smartJ$CryptoHash";const _C$=this;const _p$=console;let SECURED=false;_C$.secureClass=()=>{if(SECURED===true){_p$.warn(_N$,"Class is already SECURED")}else{SECURED=true;Object.freeze(_C$)}};const _Utils$=smartJ$Utils;const _Ba$e64=smartJ$Base64;const _Test$=smartJ$TestCrypto;let testCryptoHash_hex_CRC32B=false;let testCryptoHash_b36_CRC32B=false;let testCryptoHash_hex_MD5=false;let testCryptoHash_b64_MD5=false;let testCryptoHash_hex_SHA1=false;let testCryptoHash_b64_SHA1=false;let testCryptoHash_hex_SHA256=false;let testCryptoHash_b64_SHA256=false;let testCryptoHash_hex_SHA512=false;let testCryptoHash_b64_SHA512=false;const crypt_chrsz=()=>{return 8};const crypt_safe_add=function(x,y){let lsw=(x&65535)+(y&65535);let msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&65535};const crypt_bit_rol=(num,cnt)=>{return num<<cnt|num>>>32-cnt};const crypt_str2binl=function(str){let bin=Array();let mask=(1<<crypt_chrsz())-1;for(let i=0;i<str.length*crypt_chrsz();i+=crypt_chrsz()){bin[i>>5]|=(str.charCodeAt(i/crypt_chrsz())&mask)<<i%32}return bin};const crypt_binl2str=function(bin){let str="";let mask=(1<<crypt_chrsz())-1;for(let i=0;i<bin.length*32;i+=crypt_chrsz()){str+=String.fromCharCode(bin[i>>5]>>>i%32&mask)}return str};const crypt_str2binb=function(str){const mask=(1<<crypt_chrsz())-1;let bin=Array();for(let i=0;i<str.length*crypt_chrsz();i+=crypt_chrsz()){bin[i>>5]|=(str.charCodeAt(i/crypt_chrsz())&mask)<<32-crypt_chrsz()-i%32}return bin};const crypt_binb2str=function(bin){const mask=(1<<crypt_chrsz())-1;let str="";for(let i=0;i<bin.length*32;i+=crypt_chrsz()){str+=String.fromCharCode(bin[i>>5]>>>32-crypt_chrsz()-i%32&mask)}return str};const crypt_strtoarr=function(str){const l=str.length;let bytes=new Array(l);for(let i=0;i<l;i++){bytes[i]=str.charCodeAt(i)}return bytes};const crc32b=function(s,b36=false){if(b36===true){if(testCryptoHash_b36_CRC32B!==true){if(crc32b_b36(_Test$.unicodeString())==_Test$.testCRC32B(true)){testCryptoHash_b36_CRC32B=true}else{_Test$.raiseError("CRC32B/Hash/B36");return""}}return String(crc32b_b36(s))}else{if(testCryptoHash_hex_CRC32B!==true){if(crc32b_hex(_Test$.unicodeString())==_Test$.testCRC32B()){testCryptoHash_hex_CRC32B=true}else{_Test$.raiseError("CRC32B/Hash/Hex");return""}}return String(crc32b_hex(s))}};_C$.crc32b=crc32b;let CRC32B_TABLE=null;const crc32b_init_tbl=function(){if(CRC32B_TABLE!==null){return}CRC32B_TABLE=new Array(256);let i=0,c=0,b=0;for(i=0;i<256;i++){c=i;b=8;while(b--){c=c>>>1^(c&1?3988292384:0)}CRC32B_TABLE[i]=c}};const crc32b_hex=function(s){s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);let crc=String(crc32b_core(s).toString(16));const padding=8-crc.length;if(padding>0){for(let i=0;i<padding;i++){crc="0"+crc}}return String(crc)};const crc32b_b36=function(s){s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);let crc=String(crc32b_core(s).toString(36));const padding=7-crc.length;if(padding>0){for(let i=0;i<padding;i++){crc="0"+crc}}return String(crc)};const crc32b_core=function(s){let values=crypt_strtoarr(s),crc=-1,i=0,l=values.length,isObjects=typeof values[0]==="object",id=0;crc32b_init_tbl();for(i=0;i<l;i++){id=isObjects?values[i].id>>>0:values[i];crc=CRC32B_TABLE[(crc^id)&255]^crc>>>8}crc=~crc>>>0;return crc};const md5_hex=s=>{s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);return _Utils$.bin2hex(crypt_binl2str(md5_core(crypt_str2binl(s),s.length*crypt_chrsz())),true)};const md5_b64=s=>{s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);return _Ba$e64.encode(crypt_binl2str(md5_core(crypt_str2binl(s),s.length*crypt_chrsz())),true)};const md5_cmn=(q,a,b,x,s,t)=>{return crypt_safe_add(crypt_bit_rol(crypt_safe_add(crypt_safe_add(a,q),crypt_safe_add(x,t)),s),b)};const md5_ff=(a,b,c,d,x,s,t)=>{return md5_cmn(b&c|~b&d,a,b,x,s,t)};const md5_gg=(a,b,c,d,x,s,t)=>{return md5_cmn(b&d|c&~d,a,b,x,s,t)};const md5_hh=(a,b,c,d,x,s,t)=>{return md5_cmn(b^c^d,a,b,x,s,t)};const md5_ii=(a,b,c,d,x,s,t)=>{return md5_cmn(c^(b|~d),a,b,x,s,t)};const md5_core=function(x,len){x[len>>5]|=128<<len%32;x[(len+64>>>9<<4)+14]=len;let a=1732584193;let b=-271733879;let c=-1732584194;let d=271733878;for(let i=0;i<x.length;i+=16){let olda=a;let oldb=b;let oldc=c;let oldd=d;a=md5_ff(a,b,c,d,x[i+0],7,-680876936);d=md5_ff(d,a,b,c,x[i+1],12,-389564586);c=md5_ff(c,d,a,b,x[i+2],17,606105819);b=md5_ff(b,c,d,a,x[i+3],22,-1044525330);a=md5_ff(a,b,c,d,x[i+4],7,-176418897);d=md5_ff(d,a,b,c,x[i+5],12,1200080426);c=md5_ff(c,d,a,b,x[i+6],17,-1473231341);b=md5_ff(b,c,d,a,x[i+7],22,-45705983);a=md5_ff(a,b,c,d,x[i+8],7,1770035416);d=md5_ff(d,a,b,c,x[i+9],12,-1958414417);c=md5_ff(c,d,a,b,x[i+10],17,-42063);b=md5_ff(b,c,d,a,x[i+11],22,-1990404162);a=md5_ff(a,b,c,d,x[i+12],7,1804603682);d=md5_ff(d,a,b,c,x[i+13],12,-40341101);c=md5_ff(c,d,a,b,x[i+14],17,-1502002290);b=md5_ff(b,c,d,a,x[i+15],22,1236535329);a=md5_gg(a,b,c,d,x[i+1],5,-165796510);d=md5_gg(d,a,b,c,x[i+6],9,-1069501632);c=md5_gg(c,d,a,b,x[i+11],14,643717713);b=md5_gg(b,c,d,a,x[i+0],20,-373897302);a=md5_gg(a,b,c,d,x[i+5],5,-701558691);d=md5_gg(d,a,b,c,x[i+10],9,38016083);c=md5_gg(c,d,a,b,x[i+15],14,-660478335);b=md5_gg(b,c,d,a,x[i+4],20,-405537848);a=md5_gg(a,b,c,d,x[i+9],5,568446438);d=md5_gg(d,a,b,c,x[i+14],9,-1019803690);c=md5_gg(c,d,a,b,x[i+3],14,-187363961);b=md5_gg(b,c,d,a,x[i+8],20,1163531501);a=md5_gg(a,b,c,d,x[i+13],5,-1444681467);d=md5_gg(d,a,b,c,x[i+2],9,-51403784);c=md5_gg(c,d,a,b,x[i+7],14,1735328473);b=md5_gg(b,c,d,a,x[i+12],20,-1926607734);a=md5_hh(a,b,c,d,x[i+5],4,-378558);d=md5_hh(d,a,b,c,x[i+8],11,-2022574463);c=md5_hh(c,d,a,b,x[i+11],16,1839030562);b=md5_hh(b,c,d,a,x[i+14],23,-35309556);a=md5_hh(a,b,c,d,x[i+1],4,-1530992060);d=md5_hh(d,a,b,c,x[i+4],11,1272893353);c=md5_hh(c,d,a,b,x[i+7],16,-155497632);b=md5_hh(b,c,d,a,x[i+10],23,-1094730640);a=md5_hh(a,b,c,d,x[i+13],4,681279174);d=md5_hh(d,a,b,c,x[i+0],11,-358537222);c=md5_hh(c,d,a,b,x[i+3],16,-722521979);b=md5_hh(b,c,d,a,x[i+6],23,76029189);a=md5_hh(a,b,c,d,x[i+9],4,-640364487);d=md5_hh(d,a,b,c,x[i+12],11,-421815835);c=md5_hh(c,d,a,b,x[i+15],16,530742520);b=md5_hh(b,c,d,a,x[i+2],23,-995338651);a=md5_ii(a,b,c,d,x[i+0],6,-198630844);d=md5_ii(d,a,b,c,x[i+7],10,1126891415);c=md5_ii(c,d,a,b,x[i+14],15,-1416354905);b=md5_ii(b,c,d,a,x[i+5],21,-57434055);a=md5_ii(a,b,c,d,x[i+12],6,1700485571);d=md5_ii(d,a,b,c,x[i+3],10,-1894986606);c=md5_ii(c,d,a,b,x[i+10],15,-1051523);b=md5_ii(b,c,d,a,x[i+1],21,-2054922799);a=md5_ii(a,b,c,d,x[i+8],6,1873313359);d=md5_ii(d,a,b,c,x[i+15],10,-30611744);c=md5_ii(c,d,a,b,x[i+6],15,-1560198380);b=md5_ii(b,c,d,a,x[i+13],21,1309151649);a=md5_ii(a,b,c,d,x[i+4],6,-145523070);d=md5_ii(d,a,b,c,x[i+11],10,-1120210379);c=md5_ii(c,d,a,b,x[i+2],15,718787259);b=md5_ii(b,c,d,a,x[i+9],21,-343485551);a=crypt_safe_add(a,olda);b=crypt_safe_add(b,oldb);c=crypt_safe_add(c,oldc);d=crypt_safe_add(d,oldd)}return Array(a,b,c,d)};const md5=function(s,b64=false){if(b64===true){if(testCryptoHash_b64_MD5!==true){if(md5_b64(_Test$.unicodeString())==_Test$.testMD5(true)){testCryptoHash_b64_MD5=true}else{_Test$.raiseError("MD5/Hash/B64");return""}}return String(md5_b64(s))}else{if(testCryptoHash_hex_MD5!==true){if(md5_hex(_Test$.unicodeString())==_Test$.testMD5()){testCryptoHash_hex_MD5=true}else{_Test$.raiseError("MD5/Hash/Hex");return""}}return String(md5_hex(s))}};_C$.md5=md5;const sha1_hex=s=>{s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);return _Utils$.bin2hex(crypt_binb2str(sha1_core(crypt_str2binb(s),s.length*crypt_chrsz())),true)};const sha1_b64=s=>{s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);return _Ba$e64.encode(crypt_binb2str(sha1_core(crypt_str2binb(s),s.length*crypt_chrsz())),true)};const sha1_ft=(t,b,c,d)=>{if(t<20){return b&c|~b&d}if(t<40){return b^c^d}if(t<60){return b&c|b&d|c&d}return b^c^d};const sha1_kt=t=>{return t<20?1518500249:t<40?1859775393:t<60?-1894007588:-899497514};const sha1_core=function(x,len){x[len>>5]|=128<<24-len%32;x[(len+64>>9<<4)+15]=len;let a=1732584193;let b=-271733879;let c=-1732584194;let d=271733878;let e=-1009589776;let w=Array(80);for(let i=0;i<x.length;i+=16){let olda=a;let oldb=b;let oldc=c;let oldd=d;let olde=e;for(let j=0;j<80;j++){if(j<16){w[j]=x[i+j]}else{w[j]=crypt_bit_rol(w[j-3]^w[j-8]^w[j-14]^w[j-16],1)}let t=crypt_safe_add(crypt_safe_add(crypt_bit_rol(a,5),sha1_ft(j,b,c,d)),crypt_safe_add(crypt_safe_add(e,w[j]),sha1_kt(j)));e=d;d=c;c=crypt_bit_rol(b,30);b=a;a=t}a=crypt_safe_add(a,olda);b=crypt_safe_add(b,oldb);c=crypt_safe_add(c,oldc);d=crypt_safe_add(d,oldd);e=crypt_safe_add(e,olde)}return Array(a,b,c,d,e)};const sha1=function(s,b64=false){if(b64===true){if(testCryptoHash_b64_SHA1!==true){if(sha1_b64(_Test$.unicodeString())==_Test$.testSHA1(true)){testCryptoHash_b64_SHA1=true}else{_Test$.raiseError("SHA1/Hash/B64");return""}}return String(sha1_b64(s))}else{if(testCryptoHash_hex_SHA1!==true){if(sha1_hex(_Test$.unicodeString())==_Test$.testSHA1()){testCryptoHash_hex_SHA1=true}else{_Test$.raiseError("SHA1/Hash/Hex");return""}}return String(sha1_hex(s))}};_C$.sha1=sha1;const sha512_hex=s=>{s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);return _Utils$.bin2hex(crypt_binb2str(sha512_core(s)),true)};const sha512_b64=s=>{s=_Utils$.stringPureVal(s);s=_Utils$.utf8_encode(s);return _Ba$e64.encode(crypt_binb2str(sha512_core(s)),true)};const sha512_int_64=function(msint_32,lsint_32){const _M$=this;_M$.highOrder=msint_32;_M$.lowOrder=lsint_32};const sha512_safeadd_2=function(x,y){let lsw,msw,lowOrder,highOrder;lsw=(x.lowOrder&65535)+(y.lowOrder&65535);msw=(x.lowOrder>>>16)+(y.lowOrder>>>16)+(lsw>>>16);lowOrder=(msw&65535)<<16|lsw&65535;lsw=(x.highOrder&65535)+(y.highOrder&65535)+(msw>>>16);msw=(x.highOrder>>>16)+(y.highOrder>>>16)+(lsw>>>16);highOrder=(msw&65535)<<16|lsw&65535;return new sha512_int_64(highOrder,lowOrder)};const sha512_safeadd_4=function(a,b,c,d){let lsw,msw,lowOrder,highOrder;lsw=(a.lowOrder&65535)+(b.lowOrder&65535)+(c.lowOrder&65535)+(d.lowOrder&65535);msw=(a.lowOrder>>>16)+(b.lowOrder>>>16)+(c.lowOrder>>>16)+(d.lowOrder>>>16)+(lsw>>>16);lowOrder=(msw&65535)<<16|lsw&65535;lsw=(a.highOrder&65535)+(b.highOrder&65535)+(c.highOrder&65535)+(d.highOrder&65535)+(msw>>>16);msw=(a.highOrder>>>16)+(b.highOrder>>>16)+(c.highOrder>>>16)+(d.highOrder>>>16)+(lsw>>>16);highOrder=(msw&65535)<<16|lsw&65535;return new sha512_int_64(highOrder,lowOrder)};const sha512_safeadd_5=function(a,b,c,d,e){let lsw,msw,lowOrder,highOrder;lsw=(a.lowOrder&65535)+(b.lowOrder&65535)+(c.lowOrder&65535)+(d.lowOrder&65535)+(e.lowOrder&65535);msw=(a.lowOrder>>>16)+(b.lowOrder>>>16)+(c.lowOrder>>>16)+(d.lowOrder>>>16)+(e.lowOrder>>>16)+(lsw>>>16);lowOrder=(msw&65535)<<16|lsw&65535;lsw=(a.highOrder&65535)+(b.highOrder&65535)+(c.highOrder&65535)+(d.highOrder&65535)+(e.highOrder&65535)+(msw>>>16);msw=(a.highOrder>>>16)+(b.highOrder>>>16)+(c.highOrder>>>16)+(d.highOrder>>>16)+(e.highOrder>>>16)+(lsw>>>16);highOrder=(msw&65535)<<16|lsw&65535;return new sha512_int_64(highOrder,lowOrder)};const sha512_maj=(x,y,z)=>{return new sha512_int_64(x.highOrder&y.highOrder^x.highOrder&z.highOrder^y.highOrder&z.highOrder,x.lowOrder&y.lowOrder^x.lowOrder&z.lowOrder^y.lowOrder&z.lowOrder)};const sha512_ch=(x,y,z)=>{return new sha512_int_64(x.highOrder&y.highOrder^~x.highOrder&z.highOrder,x.lowOrder&y.lowOrder^~x.lowOrder&z.lowOrder)};const sha512_rot_r=(x,n)=>{if(n<=32){return new sha512_int_64(x.highOrder>>>n|x.lowOrder<<32-n,x.lowOrder>>>n|x.highOrder<<32-n)}else{return new sha512_int_64(x.lowOrder>>>n|x.highOrder<<32-n,x.highOrder>>>n|x.lowOrder<<32-n)}};const sha512_sh_r=(x,n)=>{if(n<=32){return new sha512_int_64(x.highOrder>>>n,x.lowOrder>>>n|x.highOrder<<32-n)}else{return new sha512_int_64(0,x.highOrder<<32-n)}};const sha512_sigma_0=function(x){let rotr28=sha512_rot_r(x,28);let rotr34=sha512_rot_r(x,34);let rotr39=sha512_rot_r(x,39);return new sha512_int_64(rotr28.highOrder^rotr34.highOrder^rotr39.highOrder,rotr28.lowOrder^rotr34.lowOrder^rotr39.lowOrder)};const sha512_sigma_1=function(x){let rotr14=sha512_rot_r(x,14);let rotr18=sha512_rot_r(x,18);let rotr41=sha512_rot_r(x,41);return new sha512_int_64(rotr14.highOrder^rotr18.highOrder^rotr41.highOrder,rotr14.lowOrder^rotr18.lowOrder^rotr41.lowOrder)};const sha512_gamma_0=function(x){let rotr1=sha512_rot_r(x,1),rotr8=sha512_rot_r(x,8),shr7=sha512_sh_r(x,7);return new sha512_int_64(rotr1.highOrder^rotr8.highOrder^shr7.highOrder,rotr1.lowOrder^rotr8.lowOrder^shr7.lowOrder)};const sha512_gamma_1=function(x){let rotr19=sha512_rot_r(x,19);let rotr61=sha512_rot_r(x,61);let shr6=sha512_sh_r(x,6);return new sha512_int_64(rotr19.highOrder^rotr61.highOrder^shr6.highOrder,rotr19.lowOrder^rotr61.lowOrder^shr6.lowOrder)};const sha512_core=function(str){let H=[new sha512_int_64(1779033703,4089235720),new sha512_int_64(3144134277,2227873595),new sha512_int_64(1013904242,4271175723),new sha512_int_64(2773480762,1595750129),new sha512_int_64(1359893119,2917565137),new sha512_int_64(2600822924,725511199),new sha512_int_64(528734635,4215389547),new sha512_int_64(1541459225,327033209)];let K=[new sha512_int_64(1116352408,3609767458),new sha512_int_64(1899447441,602891725),new sha512_int_64(3049323471,3964484399),new sha512_int_64(3921009573,2173295548),new sha512_int_64(961987163,4081628472),new sha512_int_64(1508970993,3053834265),new sha512_int_64(2453635748,2937671579),new sha512_int_64(2870763221,3664609560),new sha512_int_64(3624381080,2734883394),new sha512_int_64(310598401,1164996542),new sha512_int_64(607225278,1323610764),new sha512_int_64(1426881987,3590304994),new sha512_int_64(1925078388,4068182383),new sha512_int_64(2162078206,991336113),new sha512_int_64(2614888103,633803317),new sha512_int_64(3248222580,3479774868),new sha512_int_64(3835390401,2666613458),new sha512_int_64(4022224774,944711139),new sha512_int_64(264347078,2341262773),new sha512_int_64(604807628,2007800933),new sha512_int_64(770255983,1495990901),new sha512_int_64(1249150122,1856431235),new sha512_int_64(1555081692,3175218132),new sha512_int_64(1996064986,2198950837),new sha512_int_64(2554220882,3999719339),new sha512_int_64(2821834349,766784016),new sha512_int_64(2952996808,2566594879),new sha512_int_64(3210313671,3203337956),new sha512_int_64(3336571891,1034457026),new sha512_int_64(3584528711,2466948901),new sha512_int_64(113926993,3758326383),new sha512_int_64(338241895,168717936),new sha512_int_64(666307205,1188179964),new sha512_int_64(773529912,1546045734),new sha512_int_64(1294757372,1522805485),new sha512_int_64(1396182291,2643833823),new sha512_int_64(1695183700,2343527390),new sha512_int_64(1986661051,1014477480),new sha512_int_64(2177026350,1206759142),new sha512_int_64(2456956037,344077627),new sha512_int_64(2730485921,1290863460),new sha512_int_64(2820302411,3158454273),new sha512_int_64(3259730800,3505952657),new sha512_int_64(3345764771,106217008),new sha512_int_64(3516065817,3606008344),new sha512_int_64(3600352804,1432725776),new sha512_int_64(4094571909,1467031594),new sha512_int_64(275423344,851169720),new sha512_int_64(430227734,3100823752),new sha512_int_64(506948616,1363258195),new sha512_int_64(659060556,3750685593),new sha512_int_64(883997877,3785050280),new sha512_int_64(958139571,3318307427),new sha512_int_64(1322822218,3812723403),new sha512_int_64(1537002063,2003034995),new sha512_int_64(1747873779,3602036899),new sha512_int_64(1955562222,1575990012),new sha512_int_64(2024104815,1125592928),new sha512_int_64(2227730452,2716904306),new sha512_int_64(2361852424,442776044),new sha512_int_64(2428436474,593698344),new sha512_int_64(2756734187,3733110249),new sha512_int_64(3204031479,2999351573),new sha512_int_64(3329325298,3815920427),new sha512_int_64(3391569614,3928383900),new sha512_int_64(3515267271,566280711),new sha512_int_64(3940187606,3454069534),new sha512_int_64(4118630271,4000239992),new sha512_int_64(116418474,1914138554),new sha512_int_64(174292421,2731055270),new sha512_int_64(289380356,3203993006),new sha512_int_64(460393269,320620315),new sha512_int_64(685471733,587496836),new sha512_int_64(852142971,1086792851),new sha512_int_64(1017036298,365543100),new sha512_int_64(1126000580,2618297676),new sha512_int_64(1288033470,3409855158),new sha512_int_64(1501505948,4234509866),new sha512_int_64(1607167915,987167468),new sha512_int_64(1816402316,1246189591)];let W=new Array(64);let a,b,c,d,e,f,g,h,i,j;let T1,T2;const strlen=str.length*crypt_chrsz();str=crypt_str2binb(str);str[strlen>>5]|=128<<24-strlen%32;str[(strlen+128>>10<<5)+31]=strlen;for(let i=0;i<str.length;i+=32){a=H[0];b=H[1];c=H[2];d=H[3];e=H[4];f=H[5];g=H[6];h=H[7];for(let j=0;j<80;j++){if(j<16){W[j]=new sha512_int_64(str[j*2+i],str[j*2+i+1])}else{W[j]=sha512_safeadd_4(sha512_gamma_1(W[j-2]),W[j-7],sha512_gamma_0(W[j-15]),W[j-16])}T1=sha512_safeadd_5(h,sha512_sigma_1(e),sha512_ch(e,f,g),K[j],W[j]);T2=sha512_safeadd_2(sha512_sigma_0(a),sha512_maj(a,b,c));h=g;g=f;f=e;e=sha512_safeadd_2(d,T1);d=c;c=b;b=a;a=sha512_safeadd_2(T1,T2)}H[0]=sha512_safeadd_2(a,H[0]);H[1]=sha512_safeadd_2(b,H[1]);H[2]=sha512_safeadd_2(c,H[2]);H[3]=sha512_safeadd_2(d,H[3]);H[4]=sha512_safeadd_2(e,H[4]);H[5]=sha512_safeadd_2(f,H[5]);H[6]=sha512_safeadd_2(g,H[6]);H[7]=sha512_safeadd_2(h,H[7])}let binarray=[];for(let i=0;i<H.length;i++){binarray.push(H[i].highOrder);binarray.push(H[i].lowOrder)}return binarray};const sha512=function(s,b64=false){if(b64===true){if(testCryptoHash_b64_SHA512!==true){if(sha512_b64(_Test$.unicodeString())==_Test$.testSHA512(true)){testCryptoHash_b64_SHA512=true}else{_Test$.raiseError("SHA512/Hash/B64");return""}}return String(sha512_b64(s))}else{if(testCryptoHash_hex_SHA512!==true){if(sha512_hex(_Test$.unicodeString())==_Test$.testSHA512()){testCryptoHash_hex_SHA512=true}else{_Test$.raiseError("SHA512/Hash/Hex");return""}}return String(sha512_hex(s))}};_C$.sha512=sha512;let sha256_cache_h=[];let sha256_cache_k=[];const sha256_hex=function(str){str=_Utils$.stringPureVal(str);str=_Utils$.utf8_encode(str);const rightRotate=(value,amount)=>value>>>amount|value<<32-amount;const mathPow=Math.pow;const maxWord=mathPow(2,32);const lengthProperty="length";const lenStr=str[lengthProperty]*8;let i,j;let result="";let words=[];let hash=sha256_cache_h=sha256_cache_h||[];let k=sha256_cache_k=sha256_cache_k||[];let primeCounter=k[lengthProperty];if(primeCounter<=0){let isComposite={};for(let candidate=2;primeCounter<64;candidate++){if(!isComposite[candidate]){for(i=0;i<313;i+=candidate){isComposite[i]=candidate}hash[primeCounter]=mathPow(candidate,.5)*maxWord|0;k[primeCounter++]=mathPow(candidate,1/3)*maxWord|0}}}str+="\x80";while(str[lengthProperty]%64-56){str+="\0"}for(i=0;i<str[lengthProperty];i++){j=str.charCodeAt(i);if(j>>8){return""}words[i>>2]|=j<<(3-i)%4*8}words[words[lengthProperty]]=lenStr/maxWord|0;words[words[lengthProperty]]=lenStr;for(j=0;j<words[lengthProperty];){let w=words.slice(j,j+=16);let oldHash=hash;hash=hash.slice(0,8);for(i=0;i<64;i++){let i2=i+j;let w15=w[i-15],w2=w[i-2];let a=hash[0],e=hash[4];let temp1=hash[7]+(rightRotate(e,6)^rightRotate(e,11)^rightRotate(e,25))+(e&hash[5]^~e&hash[6])+k[i]+(w[i]=i<16?w[i]:w[i-16]+(rightRotate(w15,7)^rightRotate(w15,18)^w15>>>3)+w[i-7]+(rightRotate(w2,17)^rightRotate(w2,19)^w2>>>10)|0);let temp2=(rightRotate(a,2)^rightRotate(a,13)^rightRotate(a,22))+(a&hash[1]^a&hash[2]^hash[1]&hash[2]);hash=[temp1+temp2|0].concat(hash);hash[4]=hash[4]+temp1|0}for(i=0;i<8;i++){hash[i]=hash[i]+oldHash[i]|0}}for(i=0;i<8;i++){for(j=3;j+1;j--){let b=hash[i]>>j*8&255;result+=(b<16?0:"")+b.toString(16)}}return String(result||"")};const sha256_b64=s=>_Ba$e64.encode(_Utils$.hex2bin(sha256_hex(s),true),true);const sha256=function(s,b64=false){if(b64===true){if(testCryptoHash_b64_SHA256!==true){if(sha256_b64(_Test$.unicodeString())==_Test$.testSHA256(true)){testCryptoHash_b64_SHA256=true}else{_Test$.raiseError("SHA256/Hash/B64");return""}}return String(sha256_b64(s))}else{if(testCryptoHash_hex_SHA256!==true){if(sha256_hex(_Test$.unicodeString())==_Test$.testSHA256()){testCryptoHash_hex_SHA256=true}else{_Test$.raiseError("SHA256/Hash/Hex");return""}}return String(sha256_hex(s))}};_C$.sha256=sha256}};smartJ$CryptoHash.secureClass();if(typeof window!="undefined"){window.smartJ$CryptoHash=smartJ$CryptoHash}smartJ$CryptoBlowfish=new class{constructor(){"use strict";const _N$="smartJ$CryptoBlowfish";const _C$=this;const _p$=console;let SECURED=false;_C$.secureClass=()=>{if(SECURED===true){_p$.warn(_N$,"Class is already SECURED")}else{SECURED=true;Object.freeze(_C$)}};const _Utils$=smartJ$Utils;const _Ba$e64=smartJ$Base64;const _Ba$eConv=smartJ$BaseEncode;const _Crypto$Hash=smartJ$CryptoHash;const cipherModes={CBC:1};const POW2=Math.pow(2,2);const POW3=Math.pow(2,3);const POW4=Math.pow(2,4);const POW8=Math.pow(2,8);const POW16=Math.pow(2,16);const POW24=Math.pow(2,24);let iv=null;let IV=null;const boxes={p:[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],s0:[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],s1:[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],s2:[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],s3:[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]};const bfsig="b"+"f"+56*8+"."+"v"+16/8;const array_map=function(arr,callback,theObj,Ctr){let i=0,l=arr&&arr.length||0,out=new(Ctr||Array)(l);if(l&&typeof arr=="string"){arr=arr.split("")}if(typeof callback=="string"){callback=cache[callback]||buildFn(callback)}if(theObj){for(;i<l;++i){out[i]=callback.call(theObj,arr[i],i,arr)}}else{for(;i<l;++i){out[i]=callback(arr[i],i,arr)}}return out};const add=(x,y)=>{return(x>>16)+(y>>16)+((x&65535)+(y&65535)>>16)<<16|(x&65535)+(y&65535)&65535};const xor=(x,y)=>{return(x>>16^y>>16)<<16|(x&65535^y&65535)&65535};const dollar=function(v,box){let d=box.s3[v&255];v>>=8;let c=box.s2[v&255];v>>=8;let b=box.s1[v&255];v>>=8;let a=box.s0[v&255];let r;r=(a>>16)+(b>>16)+((a&65535)+(b&65535)>>16)<<16|(a&65535)+(b&65535)&65535;r=(r>>16^c>>16)<<16|(r&65535^c&65535)&65535;return(r>>16)+(d>>16)+((r&65535)+(d&65535)>>16)<<16|(r&65535)+(d&65535)&65535};const eb=function(o,box){let l=o.left;let r=o.right;l=xor(l,box.p[0]);r=xor(r,xor(dollar(l,box),box.p[1]));l=xor(l,xor(dollar(r,box),box.p[2]));r=xor(r,xor(dollar(l,box),box.p[3]));l=xor(l,xor(dollar(r,box),box.p[4]));r=xor(r,xor(dollar(l,box),box.p[5]));l=xor(l,xor(dollar(r,box),box.p[6]));r=xor(r,xor(dollar(l,box),box.p[7]));l=xor(l,xor(dollar(r,box),box.p[8]));r=xor(r,xor(dollar(l,box),box.p[9]));l=xor(l,xor(dollar(r,box),box.p[10]));r=xor(r,xor(dollar(l,box),box.p[11]));l=xor(l,xor(dollar(r,box),box.p[12]));r=xor(r,xor(dollar(l,box),box.p[13]));l=xor(l,xor(dollar(r,box),box.p[14]));r=xor(r,xor(dollar(l,box),box.p[15]));l=xor(l,xor(dollar(r,box),box.p[16]));o.right=l;o.left=xor(r,box.p[17])};const db=function(o,box){let l=o.left;let r=o.right;l=xor(l,box.p[17]);r=xor(r,xor(dollar(l,box),box.p[16]));l=xor(l,xor(dollar(r,box),box.p[15]));r=xor(r,xor(dollar(l,box),box.p[14]));l=xor(l,xor(dollar(r,box),box.p[13]));r=xor(r,xor(dollar(l,box),box.p[12]));l=xor(l,xor(dollar(r,box),box.p[11]));r=xor(r,xor(dollar(l,box),box.p[10]));l=xor(l,xor(dollar(r,box),box.p[9]));r=xor(r,xor(dollar(l,box),box.p[8]));l=xor(l,xor(dollar(r,box),box.p[7]));r=xor(r,xor(dollar(l,box),box.p[6]));l=xor(l,xor(dollar(r,box),box.p[5]));r=xor(r,xor(dollar(l,box),box.p[4]));l=xor(l,xor(dollar(r,box),box.p[3]));r=xor(r,xor(dollar(l,box),box.p[2]));l=xor(l,xor(dollar(r,box),box.p[1]));o.right=l;o.left=xor(r,box.p[0])};const isString=it=>{return typeof it=="string"||it instanceof String};const init=function(key){let k=key;if(isString(k)){k=array_map(k.split(""),item=>{return item.charCodeAt(0)&255})}let pos=0,data=0;let res={left:0,right:0};let i,j,l;let box={p:array_map(boxes.p.slice(0),item=>{let q=k.length,r;for(r=0;r<4;r++){data=data*POW8|k[pos++%q]}return(item>>16^data>>16)<<16|(item&65535^data&65535)&65535}),s0:boxes.s0.slice(0),s1:boxes.s1.slice(0),s2:boxes.s2.slice(0),s3:boxes.s3.slice(0)};for(i=0,l=box.p.length;i<l;){eb(res,box);box.p[i++]=res.left,box.p[i++]=res.right}for(i=0;i<4;i++){for(j=0,l=box["s"+i].length;j<l;){eb(res,box);box["s"+i][j++]=res.left,box["s"+i][j++]=res.right}}return box};const setKey=function(key){const _m$="setKey";key=_Utils$.stringPureVal(key,true);let klen=key.length;if(klen<7){_p$.warn(_N$,_m$,"Key Size is lower than 7 bytes ("+klen+") !");return""}else if(klen>4096){_p$.warn(_N$,_m$,"Key Size is higher than 4096 bytes ("+klen+") !");return""}const nByte="\0";const salted_key=String(nByte+key);const hkey1=String(_Crypto$Hash.crc32b(key)+nByte+_Crypto$Hash.md5(key)+nByte+_Crypto$Hash.sha1(key)+nByte+_Crypto$Hash.sha256(key)+nByte+_Crypto$Hash.sha512(key));const hkey2=String(_Crypto$Hash.crc32b(salted_key)+nByte+_Crypto$Hash.md5(salted_key)+nByte+_Crypto$Hash.sha1(salted_key)+nByte+_Crypto$Hash.sha256(salted_key)+nByte+_Crypto$Hash.sha512(salted_key));const composed_key=String(hkey1+nByte+hkey2);const derived_key=String(_Ba$eConv.base_from_hex_convert(_Crypto$Hash.sha256(composed_key),92))+"'"+String(_Ba$eConv.base_from_hex_convert(_Crypto$Hash.md5(composed_key),92));const r_key=String(derived_key).substr(0,448/8);return String(r_key)};const setIV=function(key){const _m$="setIV";key=_Utils$.stringPureVal(key,true);let klen=key.length;if(klen<7){_p$.warn(_N$,_m$,"Key Size is lower than 7 bytes ("+klen+") !");return""}else if(klen>4096){_p$.warn(_N$,_m$,"Key Size is higher than 4096 bytes ("+klen+") !");return""}const data=String(_Crypto$Hash.crc32b(key,true)).padStart(8,"0");IV=String(String(data)+":"+_Crypto$Hash.sha1(key,true)).substr(0,64/8);const byt=array_map(IV.split(""),item=>{return item.charCodeAt(0)});iv={};iv.left=byt[0]*POW24|byt[1]*POW16|byt[2]*POW8|byt[3];iv.right=byt[4]*POW24|byt[5]*POW16|byt[6]*POW8|byt[7];return String(IV)};const encrypt=function(plaintext,key){const _m$="encrypt";plaintext=_Utils$.stringPureVal(plaintext);if(plaintext==""){return""}plaintext=_Ba$e64.encode(plaintext);key=_Utils$.stringPureVal(key);const testIV=setIV(key);key=setKey(key);if(key.length!=56){_p$.error(_N$,_m$,"Invalid Key Length (req. 448 bytes)");return""}if(testIV.length!=8){_p$.error(_N$,_m$,"Invalid iV Length (req. 64 bytes)");return""}const mode=cipherModes.CBC;const bx=init(key);plaintext=String(plaintext+"#CKSUM256#"+_Crypto$Hash.sha256(plaintext,true));const padding=8-(plaintext.length&7);for(let i=0;i<padding;i++){plaintext+=" "}let cipher=[];const count=plaintext.length>>3;let pos=0,o={};const isCBC=mode==cipherModes.CBC;const vector={left:iv.left||null,right:iv.right||null};for(let i=0;i<count;i++){o.left=plaintext.charCodeAt(pos)*POW24|plaintext.charCodeAt(pos+1)*POW16|plaintext.charCodeAt(pos+2)*POW8|plaintext.charCodeAt(pos+3);o.right=plaintext.charCodeAt(pos+4)*POW24|plaintext.charCodeAt(pos+5)*POW16|plaintext.charCodeAt(pos+6)*POW8|plaintext.charCodeAt(pos+7);if(isCBC){o.left=(o.left>>16^vector.left>>16)<<16|(o.left&65535^vector.left&65535)&65535;o.right=(o.right>>16^vector.right>>16)<<16|(o.right&65535^vector.right&65535)&65535}eb(o,bx);if(isCBC){vector.left=o.left;vector.right=o.right}cipher.push(o.left>>24&255);cipher.push(o.left>>16&255);cipher.push(o.left>>8&255);cipher.push(o.left&255);cipher.push(o.right>>24&255);cipher.push(o.right>>16&255);cipher.push(o.right>>8&255);cipher.push(o.right&255);pos+=8}return bfsig+"!"+_Ba$eConv.b64s_enc(array_map(cipher,item=>String.fromCharCode(item)).join(""),true)};_C$.encrypt=encrypt;const decrypt=function(ciphertext,key){const _m$="decrypt";ciphertext=_Utils$.stringPureVal(ciphertext,true);if(ciphertext==""){return""}if(!_Utils$.stringStartsWith(ciphertext,bfsig+"!")){return""}ciphertext=ciphertext.split("!",2);ciphertext=_Utils$.stringPureVal(ciphertext[1],true);key=_Utils$.stringPureVal(key);const testIV=setIV(key);key=setKey(key);if(key.length!=56){_p$.error(_N$,_m$,"Invalid Key Length (req. 448 bytes)");return""}if(testIV.length!=8){_p$.error(_N$,_m$,"Invalid iV Length (req. 64 bytes)",testIV);return""}const mode=cipherModes.CBC;const bx=init(key);let pt=[];let c=null;c=array_map(_Ba$eConv.b64s_dec(ciphertext,true).split(""),function(item){return item.charCodeAt(0)});ciphertext=null;const count=c.length>>3;let pos=0,o={};const isCBC=mode==cipherModes.CBC;const vector={left:iv.left||null,right:iv.right||null};for(let i=0;i<count;i++){o.left=c[pos]*POW24|c[pos+1]*POW16|c[pos+2]*POW8|c[pos+3];o.right=c[pos+4]*POW24|c[pos+5]*POW16|c[pos+6]*POW8|c[pos+7];let left=null,right=null;if(isCBC){left=o.left;right=o.right}db(o,bx);if(isCBC){o.left=(o.left>>16^vector.left>>16)<<16|(o.left&65535^vector.left&65535)&65535;o.right=(o.right>>16^vector.right>>16)<<16|(o.right&65535^vector.right&65535)&65535;vector.left=left;vector.right=right}pt.push(o.left>>24&255);pt.push(o.left>>16&255);pt.push(o.left>>8&255);pt.push(o.left&255);pt.push(o.right>>24&255);pt.push(o.right>>16&255);pt.push(o.right>>8&255);pt.push(o.right&255);pos+=8}let plaintext=String(_Utils$.stringTrim(array_map(pt,item=>String.fromCharCode(item)).join("")));let parts=plaintext.split("#CKSUM256#",2);plaintext=_Utils$.stringPureVal(parts[0],true);const checksum=_Utils$.stringPureVal(parts[1],true);parts=null;if(_Crypto$Hash.sha256(plaintext,true)!==String(checksum)){_p$.warn(_N$,"decrypt","Checksum Failed");return""}return String(_Ba$e64.decode(plaintext))};_C$.decrypt=decrypt}};smartJ$CryptoBlowfish.secureClass();if(typeof window!="undefined"){window.smartJ$CryptoBlowfish=smartJ$CryptoBlowfish}const smartJ$DhKx=new class{constructor(){"use strict";const _N$="smartJ$DhKx";const _C$=this;const _p$=console;let SECURED=false;_C$.secureClass=()=>{if(SECURED===true){_p$.warn(_N$,"Class is already SECURED")}else{SECURED=true;Object.freeze(_C$)}};let _w$=typeof window!="undefined"?window:null;const _Utils$=smartJ$Utils;const _Ba$eConv=smartJ$BaseEncode;const _Crypto$Hash=smartJ$CryptoHash;const _Crypto$Blowfish=smartJ$CryptoBlowfish;const _Option$=typeof smartJ$Options!="undefined"&&smartJ$Options&&smartJ$Options.DhKx!=undefined&&typeof smartJ$Options==="object"&&typeof smartJ$Options.DhKx==="object"?smartJ$Options.DhKx:null;const bigIntSupport=_Option$&&!!_Option$.BigIntSupport||_w$&&_w$.crypto&&_w$.crypto.getRandomValues&&_w$.BigInt?true:false;_C$.param_Size=_Option$&&typeof _Option$.Size=="string"&&_Option$.Size?_Utils$.stringTrim(_Option$.Size):"default";_C$.param_Prix=_Option$&&typeof _Option$.Prix=="string"&&_Option$.Prix?_Utils$.stringTrim(_Option$.Prix):"default";_C$.param_UseBigInt=bigIntSupport&&(_Option$&&!!_Option$.UseBigInt)?true:false;_C$.param_DevMode=_Option$&&!!_Option$.DevMode?true:false;_w$=null;const getMode=function(){let mode="??";if(_C$.param_UseBigInt===true){mode="BigInt"}else{mode="Int64"}return String(mode)};_C$.getMode=getMode;const getBaseGen=function(size){size=_Utils$.stringPureVal(size,true);if(size===""||size==="default"){size=_C$.param_Size}return rng(String(size))};_C$.getBaseGen=getBaseGen;const getSrvData=function(basegen){const size=String(_C$.param_Size);const prix=String(_C$.param_Prix);const p=prime(prix);const ssec=rng(size);const spub=powm(basegen,ssec,p);return{base:basegen,prix:prix,sec:ssec,pub:spub}};_C$.getSrvData=getSrvData;const getSrvShad=function(ssec,cpub){const prix=String(_C$.param_Prix);const p=prime(prix);const shad=powm(cpub,ssec,p);return shadizer(shad)};_C$.getSrvShad=getSrvShad;const getCliData=function(basegen){const size=String(_C$.param_Size);const prix=String(_C$.param_Prix);const p=prime(prix);const csec=rng(size);const cpub=powm(basegen,csec,p);return{base:basegen,prix:prix,sec:csec,pub:cpub}};_C$.getCliData=getCliData;const getCliShad=function(csec,spub){const prix=String(_C$.param_Prix);const p=prime(prix);const shad=powm(spub,csec,p);return shadizer(shad)};_C$.getCliShad=getCliShad;const getIdzShadData=function(idz){idz=_Utils$.stringPureVal(idz,true);let err="";let cliShad="";if(idz==""){err="Empty Idz"}else{let arr=idxtizer(idz);if(arr.err&&arr.err!=""){err=String(arr.err)}else{cliShad=_Utils$.stringPureVal(getCliShad(arr.csec,arr.spub),true);if(cliShad==""){err="Empty Shad"}}}return{type:"IdzShadData",mode:String(getMode()),size:String(_C$.param_Size),prix:String(_C$.param_Prix),shad:String(cliShad),err:String(err)}};_C$.getIdzShadData=getIdzShadData;const getData=function(){const mode=String(getMode());if(_C$.param_DevMode!==true){const errMsg="Development Mode is N/A";_p$.warn(_N$,"getData",errMsg);return{err:String(errMsg)}}_p$.log(_N$,"[NOTICE]: getData: development mode is enabled","["+mode+"]");const basegen=getBaseGen(_C$.param_Size);const srvData=getSrvData(basegen);const cliData=getCliData(basegen);const srvShad=getSrvShad(srvData.sec,cliData.pub);const cliShad=getCliShad(cliData.sec,srvData.pub);let err="";if(srvShad==undefined||srvShad==""||srvShad=="0"||srvShad!==cliShad){err="Shad Mismatch"}return{type:"Data",mode:String(mode),size:String(_C$.param_Size),prix:String(_C$.param_Prix),prim:String(prime(String(_C$.param_Prix))),basegen:String(basegen),srv:{sec:String(srvData.sec),pub:String(srvData.pub),shad:String(srvShad)},cli:{sec:String(cliData.sec),pub:String(cliData.pub),shad:String(cliShad)},idz:String(idatizer(cliData.sec,srvData.pub)),err:String(err)}};_C$.getData=getData;const idxtizer=function(idz){idz=_Utils$.stringPureVal(idz,true);if(idz==""){return{err:"Invalid IDZ (1)"}}if(!_Utils$.stringContains(idz,"!")){return{err:"Invalid IDZ (2)"}}const arr=idz.split("!");if(arr.length!==3){return{err:"Invalid IDZ (3)"}}const pfx="dH.";const ver="v1";let sig="";let mod="0";if(_C$.param_UseBigInt===true){sig="iHg.";mod="1"}else{sig="i64.";mod="2"}if(arr[0]!==pfx+sig+ver){return{err:"Invalid IDZ (4."+mod+")"}}arr[1]=_Utils$.stringPureVal(_Ba$eConv.b64s_dec(arr[1]),true);if(arr[1]==""){return{err:"Invalid IDZ (5)"}}arr[2]=_Utils$.stringPureVal(_Ba$eConv.b64s_dec(arr[2]),true);if(arr[2]==""){return{err:"Invalid IDZ (6)"}}const bk=_Utils$.stringTrim(_Ba$eConv.base_to_hex_convert(arr[2],85));if(bk==""){return{err:"Invalid IDZ (7)"}}arr[2]=_Utils$.stringTrim(String(_Utils$.stringTrim(_Utils$.hex2bin(bk))).substr(1));if(arr[2]==""){return{err:"Invalid IDZ (8)"}}arr[1]=_Utils$.stringPureVal(_Crypto$Blowfish.decrypt(String(arr[1]),_Ba$eConv.base_from_hex_convert(_Crypto$Hash.sha256("&="+bk+"#"),92)),true);if(arr[1]==""){return{err:"Invalid IDZ (9)"}}arr[1]=_Utils$.stringTrim(String(_Utils$.hex2bin(_Utils$.stringTrim(_Ba$eConv.base_to_hex_convert(arr[1],92)))).substr(1));if(arr[1]==""){return{err:"Invalid IDZ (10)"}}return{csec:String(arr[1]),spub:String(arr[2])}};const idatizer=function(csec,spub){let shd="dH";if(_C$.param_UseBigInt===true){shd+=".iHg"}else{shd+=".i64"}const bk=_Utils$.bin2hex("@"+spub);return String(shd+".v1!"+_Ba$eConv.b64s_enc(_Crypto$Blowfish.encrypt(_Ba$eConv.base_from_hex_convert(_Utils$.bin2hex("$"+csec),92),_Ba$eConv.base_from_hex_convert(_Crypto$Hash.sha256("&="+bk+"#"),92)))+"!"+_Ba$eConv.b64s_enc(_Ba$eConv.base_from_hex_convert(bk,85)))};const evenhexlen=function(shx){shx=_Utils$.stringPureVal(shx,true);const len=shx.length;if(len<=0){shx="00"}else if(len%2!==0){shx="0"+shx}return String(shx)};const shadizer=function(shad){let shr="";if(_C$.param_UseBigInt===true){const shx=String(evenhexlen(shad.toString(16)));shr=_Ba$eConv.base_from_hex_convert(shx,92)}else{const shx=String(evenhexlen(shad.toString(16)));shr=_Ba$eConv.base_from_hex_convert(shx,85)+"'"+_Ba$eConv.base_from_hex_convert(shx,62)+"'"+_Ba$eConv.base_from_hex_convert(shx,92)+"'"+_Ba$eConv.base_from_hex_convert(shx,58)}return String(shr)};const rng=size=>{if(_C$.param_UseBigInt===true){return rngBigint(size)}else{return rngInt64(size)}};const powm=(a,b,pri)=>{if(_C$.param_UseBigInt===true){return powmBigint(a,b,pri)}else{return powmInt64(a,b,pri)}};const prime=prix=>{if(_C$.param_UseBigInt===true){return primeBigint(prix)}else{return primeInt64(prix)}};const rngInt64=function(size){size=_Utils$.stringPureVal(size,true);if(size===""||size==="default"){size=24}size=Math.ceil(size);switch(size){case 12:case 16:case 24:break;default:size=24;_p$.warn(_N$,"rngInt64: Invalid Size Selection, using defaults:",size)}let rnd=~~(Math.random()*(Math.pow(2,size)-1))>>>0;if(rnd<=0){rnd=1}return rnd};const rngBigint=function(size){size=_Utils$.stringPureVal(size,true);if(size===""||size==="default"){size=16}size=Math.ceil(size);switch(size){case 128:case 96:case 64:case 48:case 32:case 16:case 8:break;default:size=16;_p$.warn(_N$,"rngBigint: Invalid Size Selection, using defaults:",size)}const randoms=new Uint32Array(size);for(let i=0,l=randoms.length;i<l;i++){randoms[i]=Math.floor(Math.random()*256)}return String(Array.from(randoms).map(elem=>String(elem)).join(""))};const powmInt64=(a,b,pri)=>{if(b<=0){return 1}else if(b===1){return a%pri}else if(b%2===0){return powmInt64(a*a%pri,b/2|0,pri)%pri}else{return powmInt64(a*a%pri,b/2|0,pri)*a%pri}};const powmBigint=(a,b,pri)=>{a=BigInt(a);b=BigInt(b);pri=BigInt(pri);if(b<=BigInt(0)){return BigInt(1)}else if(b==BigInt(1)){return a%pri}else if(b%BigInt(2)==BigInt(0)){return powmBigint(a*a%pri,b/BigInt(2),pri)%pri}else{return powmBigint(a*a%pri,b/BigInt(2),pri)*a%pri}};const primeInt64=function(prix){const primesInt64=[72419213,54795931,32926051,21801887,77635013,25470191,77639819,42010253,33563273,32792339,15923857,67022173,84250253,67680727,63438329,52164643,51603269,61444631,58831133,55711141,73596863,48905489,61642963,53812273,16600799,79158229,56490361,73391389,64351751,14227727,40517299,95234563,42913363,63566527,52338703,80146337,37597201,93581269,32547497,75587359,26024821,57042743,13862969,46496719,42787387,29830469,59912407,75206447,40343341,72357113,23434063,24336373,39422399,12866611,11592293,83937899,79746883,37997129,76431193,67774627,72107393,31363271,30388361,25149569,54104161,50575709,70327973,54960077,92119793,80615231,38967139,65609657,66432673,56145097,73864853,70708361,23913011,35283481,58352201,57881491,89206109,70619069,96913759,66156679,63395257,70022237,93547543,10891057,75492367,86902223,33054397,36325571,49119293,64100537,31986431,16636237];prix=_Utils$.stringPureVal(prix,true);if(prix===""||prix==="default"){prix=-1}prix=Math.floor(prix);let px=primesInt64[47];if(prix>=0&&prix<primesInt64.length){px=primesInt64[prix]}else if(prix!==-1){_p$.warn(_N$,"prime: Invalid Prime Selection (Int64), using defaults:",prix)}return"0x"+px.toString(16)};const primeBigint=function(prix){const hcBase1="FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A63";const hcBase2="7ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE";const hcBase3="45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA";const hcBase4="18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AA";const hcBase5="AC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A9";const hcBase6="2108011A723C12A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4DF435C9340";const hcBase7="2849236C3FAB4D27C7026C1D4DCB2602646DEC9751E763DBA37BDF8FF9406AD9E530EE5DB382F413001AEB06A53ED9027D831179727B0865A8918DA3EDBEBCF9B14ED44CE6CBACED4BB1BDB7F1447E6CC254B332051512BD7AF426FB8F401378CD2BF5983CA01C64B92ECF032EA15D1721D03F482D7CE6E74FEF6D55E702F46980C82B5A84031900B1C9E59E7C97FBEC7E8F323A97A7E36CC88BE0F1D45B7FF585AC54BD407B22B4154AACC8F6D7EBF48E1D814CC5ED20F8037E0A79715EEF29BE32806A1D58BB7C5DA76F550AA3D8A1FBFF0EB19CCB1A313D55CDA56C9EC2EF29632387FE8D76E3C0468043E8F663F4860EE12BF2D5B0B7474D6E694F91E6D";const primesBigint={h017:"0x1141317432f7b89",h031:"0x6febe061005175e46c896e4079",h047:"0xf3f2b0ee30050c5f6bfcb9df1b9454e77bc3503",h061:"0x4771cfc3c2b8ad4561cb5437132e35e8398e8f956a2f2c94c51",h097:"0x426f09b2b25aba6bbcbf9ca5edb660b91d033440916732af9ae175a84afb665a25b392361c6952119",h127:"0x2c6121e6b14ecf756c083544de0e0933cac90dbeb6239905bfbec764527bbb4166ff832a2bcc3b4d6f634eddd30e40634adbbb5bfd",h257:"0x279e569032f0c7256218b58ad6418aa0e9436be424ab8f1431b1f9e6b5814e0ebda0ff65ef085d7e73fee51744dec07fe08c1a1cc65855630ca983927ca277406ac42094064387d65aeaa849f9bf449e04df8cb0e99a44b004ce0efca3386f1e82c078723cd265288d9a41",h232c1:"0x"+hcBase1+"A3620FFFFFFFFFFFFFFFF",h309c2:"0x"+hcBase1+hcBase2+"65381FFFFFFFFFFFFFFFF",h463c5:"0x"+hcBase1+hcBase2+hcBase3+"237327FFFFFFFFFFFFFFFF",h617c14:"0x"+hcBase1+hcBase2+hcBase3+hcBase4+"CAA68FFFFFFFFFFFFFFFF",h925c15:"0x"+hcBase1+hcBase2+hcBase3+hcBase4+hcBase5+"3AD2CAFFFFFFFFFFFFFFFF",h1234c16:"0x"+hcBase1+hcBase2+hcBase3+hcBase4+hcBase5+hcBase6+"63199FFFFFFFFFFFFFFFF",h1850c17:"0x"+hcBase1+hcBase2+hcBase3+hcBase4+hcBase5+hcBase6+hcBase7+"CC4024FFFFFFFFFFFFFFFF",h2467c18:"0x"+hcBase1+hcBase2+hcBase3+hcBase4+hcBase5+hcBase6+hcBase7+"BE115974A3926F12FEE5E438777CB6A932DF8CD8BEC4D073B931BA3BC832B68D9DD300741FA7BF8AFC47ED2576F6936BA424663AAB639C5AE4F5683423B4742BF1C978238F16CBE39D652DE3FDB8BEFC848AD922222E04A4037C0713EB57A81A23F0C73473FC646CEA306B4BCBC8862F8385DDFA9D4B7FA2C087E879683303ED5BDD3A062B3CF5B3A278A66D2A13F83F44F82DDF310EE074AB6A364597E899A0255DC164F31CC50846851DF9AB48195DED7EA1B1D510BD7EE74D73FAF36BC31ECFA268359046F4EB879F924009438B481C6CD7889A002ED5EE382BC9190DA6FC026E479558E4475677E9AA9E3050E2765694DFC81F56E880B96E7160C980DD98EDD3DFFFFFFFFFFFFFFFFF"};let px=null;prix=_Utils$.stringPureVal(prix,true);if(prix===""){prix="default"}switch(String(prix)){case"h017":case"h031":case"h047":case"h061":case"h097":case"h127":case"h257":case"h232c1":case"h309c2":case"h463c5":case"h617c14":case"h925c15":case"h1234c16":case"h1850c17":case"h2467c18":px=primesBigint[String(prix)];break;default:if(prix!=="default"){_p$.warn(_N$,"prime: Invalid Prime Selection (Bigint), using defaults:",prix)}px=primesBigint["h127"]}return String(px)}}};smartJ$DhKx.secureClass();if(typeof window!="undefined"){window.smartJ$DhKx=smartJ$DhKx}
// #END
