// JS-Script (UM): matchtags.js @ 2025-02-07 03:11:47 +0000
(function(t){if(typeof exports=="object"&&typeof module=="object"){t(require("../../lib/codemirror"),require("../fold/xml-fold"))}else if(typeof define=="function"&&define.amd){define(["../../lib/codemirror","../fold/xml-fold"],t)}else{t(CodeMirror)}})(function(f){"use strict";f.defineOption("matchTags",false,function(t,e,a){if(a&&a!=f.Init){t.off("cursorActivity",o);t.off("viewportChange",i);n(t)}if(e){t.state.matchBothTags=typeof e=="object"&&e.bothTags;t.on("cursorActivity",o);t.on("viewportChange",i);o(t)}});function n(t){if(t.state.tagHit){t.state.tagHit.clear()}if(t.state.tagOther){t.state.tagOther.clear()}t.state.tagHit=t.state.tagOther=null}function o(r){r.state.failedTagMatch=false;r.operation(function(){n(r);if(r.somethingSelected()){return}var t=r.getCursor(),e=r.getViewport();e.from=Math.min(e.from,t.line);e.to=Math.max(t.line+1,e.to);var a=f.findMatchingTag(r,t,e);if(!a){return}if(r.state.matchBothTags){var o=a.at=="open"?a.open:a.close;if(o){r.state.tagHit=r.markText(o.from,o.to,{className:"CodeMirror-matchingtag"})}}var i=a.at=="close"?a.open:a.close;if(i){r.state.tagOther=r.markText(i.from,i.to,{className:"CodeMirror-matchingtag"})}else{r.state.failedTagMatch=true}})}function i(t){if(t.state.failedTagMatch){o(t)}}f.commands.toMatchingTag=function(t){var e=f.findMatchingTag(t,t.getCursor());if(e){var a=e.at=="close"?e.open:e.close;if(a){t.extendSelection(a.to,a.from)}}}});
// #END
